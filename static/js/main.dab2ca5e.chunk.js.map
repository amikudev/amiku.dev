{"version":3,"sources":["components/experience.js","components/education.js","App.js","serviceWorker.js","index.js"],"names":["Experience","react_default","a","createElement","className","src","this","props","experience","icon","alt","firm","position","startDate","endDate","period","location","children","showLine","Component","Education","education","college","degree","specialization","App","experiences","components_experience","components_education","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dab2ca5e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './experience.scss';\n\nclass Experience extends Component {\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-12 col-lg-2'>\n                    <img src={'./images/' + this.props.experience.icon} className='company-icon pb-3' alt={this.props.experience.firm}/>\n                </div>\n                <div className='col-12 col-lg-10'>\n                    <div className='text-dark mb-1 font-weight-bolder'>{this.props.experience.position}</div>\n                    <div className='text-dark font-weight-bold'>{this.props.experience.firm}</div>\n                    <div className='text-secondary'>\n                        {this.props.experience.startDate} - {this.props.experience.endDate} . &nbsp;\n                        {this.props.experience.period}\n                    </div>\n                    <div className='text-secondary'>\n                        {this.props.experience.location}\n                    </div>\n                    {this.props.children}\n\n                    {this.props.experience.showLine? (<hr/>): null}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nExperience.propTypes = {\n    experience: PropTypes.shape({\n        firm: PropTypes.string,\n        position: PropTypes.string,\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n        period: PropTypes.string,\n        location: PropTypes.string,\n        icon: PropTypes.string,\n        showLine: PropTypes.bool\n    })\n}\n\nexport default Experience;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './experience.scss';\n\nclass Education extends Component {\n\n    componentDidMount(){\n        //get request\n        // fetch('https://reqres.in/api/users')\n        //     .then(res => res.json())\n        //     .then(output => {\n        //         console.log(output)\n        //     })\n\n        //post request\n        // fetch('https://reqres.in/api/users', {\n        //     body: {\n        //         \"name\": \"morpheus\",\n        //         \"job\": \"leader\"\n        //     },\n        //     method: 'POST'\n        // })\n        //     .then(res => res.json())\n        //     .then(output => {\n        //         console.log(output)\n        //     })\n    };\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-12 col-lg-2'>\n                    <img src={'./images/' + this.props.education.icon} className='company-icon pb-3' alt={this.props.education.firm}/>\n                </div>\n                <div className='col-12 col-lg-10'>\n                    <div className='text-dark mb-1 font-weight-bolder'>{this.props.education.college}</div>\n                    <div className='text-dark font-weight-bold'>\n                        {this.props.education.degree +', ' + this.props.education.specialization}\n                    </div>\n                    <div className='text-secondary'>\n                        {this.props.education.startDate} - {this.props.education.endDate}\n                    </div>\n                    {this.props.children}\n\n                    {this.props.education.showLine? (<hr/>): null}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nEducation.propTypes = {\n    education: PropTypes.shape({\n        college: PropTypes.string,\n        degree: PropTypes.string,\n        specialization: PropTypes.string,\n        from: PropTypes.string,\n        to: PropTypes.string,\n        icon: PropTypes.string,\n        showLine: PropTypes.bool\n    })\n}\n\nexport default Education;","import React from 'react';\nimport './App.scss';\n\nimport Experience from './components/experience'\nimport Education from './components/education'\n\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/css/boostrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    let experiences = [\n        {\n            'firm': 'Amazon',\n            'position': 'SDE-2',\n            'startDate': 'Oct/18',\n            'endDate': 'Present',\n            'period': '9 months',\n            'location': 'Bangaluru',\n            'icon': 'amazon.png',\n            showLine: true\n        },\n        {\n            'firm': 'Morgan Stanley',\n            'position': 'Senior Software Engineer',\n            'startDate': 'Aug/14',\n            'endDate': 'Oct/18',\n            'period': '4 yr 3 mos',\n            'location': 'Mumbai',\n            'icon': 'ms.png',\n            showLine: true\n        },\n        {\n            'firm': 'Adobe',\n            'position': 'Member of Technical staff',\n            'startDate': 'May/09',\n            'endDate': 'Dec/09',\n            'period': '8 mos',\n            'location': 'Noida',\n            'icon': 'adobe.jpeg',\n            showLine: false\n        }\n\n    ];\n\n    let education = [\n        {\n            college: 'IIT Varanasi',\n            degree: 'B. Tech.',\n            specialization: 'Computer Sc. & Engg.',\n            startDate: '2005',\n            endDate: '2009',\n            icon: 'dce.png',\n            showLine: true\n        },\n        {\n            college: 'Delhi Technological University',\n            degree: 'M. Tech.',\n            specialization: 'Software Engg.',\n            startDate: '2012',\n            endDate: '2014',\n            icon: 'bhu.png',\n            showLine: false\n        }\n    ]\n\n    return (\n        <div className=\"App container-fluid\">\n            <div className='bg-image-container'>\n                <img src='./images/bg.jpg' alt={'Background'}/>\n            </div>\n\n            <div className='jumbotron text-center position-relative'>\n                <img src='./images/amit-kumar.jpg' className={'rounded-circle photo img-fluid shadow-lg'}\n                     alt={'Amit Kumar'}/>\n                <h2 className='text-primary'>Amit Kumar</h2>\n                <h4 className='text-secondary'>Full Stack Software Professional</h4>\n                <h5 className='text-secondary'>React | Java | AWS</h5>\n\n            </div>\n\n            <br/>\n\n            <div className=\"card text-secondary detail-section div-center shadow\">\n                <div className=\"card-body text-left\">\n                    <h4 className=\"card-title text-primary\">About</h4>\n                    {/*<hr/>*/}\n                    <div>\n                        <p>Software professional with 5.5 years of experience in full-stack system design and software\n                            development across Banking and Advertising domains at Amazon, Morgan Stanley and Adobe.</p>\n\n                        <ul>\n                            <li>Proficient in server-side technologies like Java-Spring Ecosystem, Object Oriented\n                                Design.</li>\n                            <li>Proficient in Angular/React web development ecosystem.</li>\n                            <li>Hands-on experience in AWS, Relational and NoSQL Databases.</li>\n                            <li>Expert at data structure and algorithms, clean system design.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <br/>\n            <br/>\n\n            <div className=\"card text-secondary detail-section div-center shadow\">\n                <div className=\"card-body text-left\">\n                    <h4 className=\"card-title text-primary\">Experience</h4>\n                    <hr/>\n                    <Experience experience={experiences[0]}>\n                        <div className='pt-3'>Working for Amazon advertisement design services platform. Our application is a full\n                            stack application which provides raw assets and final creative spec exchange,\n                            feedback and approval workflows between advertisers and amazon creative designers.\n                            It is a full stack application using Java, React, Redux, AWS.\n                            I am contributing to all tiers of development.\n                        </div>\n                    </Experience>\n\n\n\n                    <Experience experience={experiences[1]}>\n                        <div className='pt-3'>\n                            <ul className='list-unstyled'>\n                                <li>Design architecture and development of Settlement instruction renovation program, which is a repository for creating, maintaining and settlement instructions. Settlement instructions are used for trade enrichment, settlement and confirmation.</li>\n                                <li>Defining the UI application architecture, selecting appropriate framework, dev environment setup, hiring and leading UI team during the implementation process.</li>\n                                <li>Contributed to Real estate investment tracking application of Morgan Stanley.\n                                </li>\n                                <li>Designed and developed a very well appreciated Google Map integrated web application for Morgan Stanley Real Estate Investments (Similar to 99acres)</li>\n                            </ul>\n                        </div>\n                    </Experience>\n\n                    <Experience experience={experiences[2]}>\n                        <div className='pt-3'>\n                            <ul className='list-unstyled'>\n                                <li>Automated the mechanism to add peer review comments on violation of Adobe code policy against new perforce check- ins through the implementation of wrapper over code collaborator API</li>\n                                <li>Developed and deployed a Bugbot using Perl for collecting unallocated bugs for a particular project and reporting to management</li>\n                            </ul>\n                        </div>\n                    </Experience>\n                </div>\n            </div>\n\n            <br/>\n            <br/>\n            \n            <div className=\"card text-secondary detail-section div-center shadow\">\n                <div className=\"card-body text-left\">\n                    <h4 className=\"card-title text-primary\">Education</h4>\n                    <hr/>\n                    <Education education={education[0]}>\n                        <div>Rewarded with Best innovation prize in Annual National technical festival (technex '07)\n                            for presentation of Digital Economy concept with working model.\n                        </div>\n                    </Education>\n                    <Education education={education[1]}>\n                        <div>\n                            Attended Courses on Artificial Intelligence, Cryptography, Distributed systems,\n                            Software engineering best practices.\n                            Also grabbed excellent grip on data structures, algorithms and Core Java.\n                        </div>\n                    </Education>\n\n                </div>\n            </div>\n\n            <br/>\n            <br/>\n\n            <footer className='card-footer'>\n                <div>\n\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}